version: 0.2
env:
  git-credential-helper: yes
phases:
  install:
    runtime-versions:
      nodejs: 16
      python: 3.9
    commands:
      # Install packages or any pre-reqs in this phase.
      # Upgrading SAM CLI to latest version
      - pip3 install --upgrade aws-sam-cli
      - python3 -m pip install --upgrade pip
      - sam --version
      - TEMP_ROLE=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name prodplatform)
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')       
      - export AWS_DEFAULT_REGION=${DEPLOY_REGION}
  pre_build:
    commands:
      # Run tests, lint scripts or any other pre-build checks.
      #- npm run test

  build:
    commands:
      # Use Build phase to build your artifacts (compile, etc.)
      - cd model/product && sam build -t template.yaml
      - cd ../product && sam build -t templateFunctions.yaml
      - cd ../category && sam build -t template.yaml
      - cd ../category && sam build -t templateFunctions.yaml
      - cd ../priceAndAvailability && sam build -t template.yaml
      - cd ../../
      - cd api && sam build
      - cd datasources
      - cd Product && sam build -t Product.yaml
      - cd ../PriceAndAvailability && sam build -t PriceAndAvailability.yaml
      - cd ../Category && sam build -t Category.yaml
      - cd ../../../

  post_build:
    commands:
      # Use Post-Build for notifications, git tags, upload artifacts to S3
      - cd model/product && sam deploy -t template.yaml  --config-env ${env} --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../product && sam deploy -t templateFunctions.yaml --config-env ${env}Dep --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../category && sam deploy -t template.yaml --config-env ${env} --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../category && sam deploy -t templateFunctions.yaml --config-env ${env}Dep --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../priceAndAvailability && sam deploy -t template.yaml --config-env ${env} --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../../api && sam deploy --config-env ${env} --no-confirm-changeset --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-fail-on-empty-changeset
      - cd datasources/Product
      - cd ../Product && sam deploy -t Product.yaml --config-env ${env} --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../PriceAndAvailability && sam deploy -t PriceAndAvailability.yaml --config-env ${env} --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../Category && sam deploy -t Category.yaml --config-env ${env} --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../../

      #  Backup the Repository
      - ls -ltr
      - unset AWS_ACCESS_KEY_ID
      - unset AWS_SECRET_ACCESS_KEY
      - unset AWS_SESSION_TOKEN
      - unset AWS_DEFAULT_REGION
      - git config --global --unset-all credential.helper
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git clone --mirror https://git-codecommit.us-east-1.amazonaws.com/v1/repos/${REPO_NAME} LocalRepository
      - cd LocalRepository
      - git remote set-url --push origin https://git-codecommit.${BACKUP_REPO_REGION}.amazonaws.com/v1/repos/${REPO_NAME}
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git fetch -p origin
      - git push --mirror
      - cd ..
      - rm -rf  LocalRepository
